<?xml version="1.0" encoding="UTF-8"?>

<project basedir="."  default="create-jboss-ear"   name="Backend"  xmlns:ivy="antlib:org.apache.ivy.ant" >

  <description>Build file per il progetto: [Backend-FDC]</description>
  <!-- -->
  <property file="buildfiles/build7.properties" />
  <property file="buildfiles/path.properties" />	
		
  <property file="buildfiles/${deployContext}/dist.properties" />
  <property file="buildfiles/${deployContext}/ftp.properties" />
  <property file="buildfiles/${deployContext}/api.properties" />
  <property file="buildfiles/${deployContext}/JBossLocale.properties" />	
 
  <!-- Nome file di properties per BACKEND-->
  <property name="fileProperties" value="fdc_backend_configurazione.properties" />
	
  <!-- -->
  <path id="library.ref">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>
	
  <!-- # Librerie per IVY                                          # -->
  <property name="ivy.jar.dir" value="antlib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy-2.4.0.jar" />
	
  <path id="ivy.lib.path">
	<pathelement location="${ivy.jar.file}"/>
  </path>
  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: init                                              # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="init">
  	<echo message="Inizio target init" />
    <tstamp />
    <condition property="target" value="dev">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>
    <mkdir dir="${build}/classes" />
    <mkdir dir="${temp}/${target}/${earLib}" />
  	<mkdir dir="${build}/archives"/>
    <mkdir dir="${build}/archives/${target}" />
  	<mkdir dir="${build}/archives/${target}/lib" />
    <mkdir dir="${dist}/${target}" />
    <mkdir dir="${build}/javadoc" />
    <mkdir dir="${build}/jsp" />
    <mkdir dir="${build}/cache" />
    <antcall target="timestamp">
      <param name="message" value="Inizio:" />
    </antcall>
  </target>
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: timestamp                                         # -->
  <!-- ############################################################# -->
  <!-- -->
	<target name="timestamp">
	  <tstamp>
	    <format property="current.time" pattern="MM/dd/yyyy hh:mm:ss aa" />
	  </tstamp>
	
	  <echo message="${message} ${current.time}" />      
	</target>
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: default                                           # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="create-jboss-ear" description="Generazione dei prodotti per jboss">
  	<echo message="Inizio target create-jboss-ear" />
    <condition property="first-call" value="distribution">
      <not><equals arg1="${target}" arg2="$${target}" /></not>
    </condition>
    <condition property="first-call" value="all-targets">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>
    <echo message="server: ${server}" />
    <echo message="target: ${target}" />
    <echo message="first-call: ${first-call}" />
    <antcall target="${first-call}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-recreate                              # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="environment-recreate" depends="clean-all">
  	<echo message="Inizio target environment-recreate" />
    <mkdir dir="build/temp/conf" />
  	<mkdir dir="src/web/${contesto}" />
    <copy todir="build/temp/conf" overwrite="true">
      <fileset dir="${conf}" />
    </copy>
  </target>
	
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-war                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="create-tomcat-war" 
  		  description="Generazione dei prodotti x il deploy su tomcat " 
  		  depends="clean-all,environment-recreate,compile-all, commons-jar,business-ejb-jar, integration-jar">
  	<echo message="Inizio target create-tomcat-war" />
  		<copy todir="${build}/classes">
      		<fileset dir="${conf}/web/${deployContext}/${webapp}/WEB-INF"
               includes="struts*.xml"/>
    	</copy>
  		<copy todir="${temp}/${target}/${earLib}">
  	      <fileset dir="${lib}" excludes="${war-exclude-libs-filter-tm}" />
  	    </copy>
  	    <move file="${build}/archives/${target}/${webapp}-commons.jar" tofile="${temp}/${target}/${earLib}/${webapp}-commons.jar"/>
  	    <move file="${build}/archives/${target}/${webapp}-integration.jar" tofile="${temp}/${target}/${earLib}/${webapp}-integration.jar"/>
  		<move file="${build}/archives/${target}/${webapp}-business.jar" tofile="${temp}/${target}/${earLib}/${webapp}-business.jar"/>
	   	<war destfile="${build}/archives/${target}/${war-file-name}.war" webxml="${build}/temp/conf/web/${deployContext}/${webapp}/WEB-INF/web.xml"
    	 	 roundup="false" manifest="${build}/temp/conf/web/${deployContext}/${webapp}/META-INF/MANIFEST.MF">
		     <webinf dir="${conf}/web/${deployContext}/${webapp}/WEB-INF" includes="*.xml" />
		     <fileset dir="${srcweb}" />
		     <classes dir="${build}/jsp" includes="**" />
		     <classes dir="${build}/classes" includes="it/liguriadigitale/${prodotto}/${componente}/presentation/**,*.xml,*.properties,resources/**" />
		     <lib dir="${temp}/${target}/${earLib}" includes="*" /> 
    	</war>
  	    <move file="${build}/archives/${target}/${war-file-name}.war" todir="${dist}/${target}/${dist-file-name}"></move>
		<delete dir="${tomcatHome}/webapps/">
			<include name="${contesto}*"/>
		</delete>	
  	    <delete dir="${tomcatHome}/webapps/${contesto}"/>
  		<copy todir="${tomcatHome}/webapps">
	      <fileset dir="${dist}/${target}/${dist-file-name}"/>
	    </copy>
  </target>
	

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: compile-all                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="compile-all" depends="init,load-dependencies">
  	<echo message="Inizio target compile-all" />
  	<javac srcdir="${src}/java" destdir="${build}/classes" debug="true" debuglevel="lines,vars,source" includeantruntime="false" optimize="on" deprecation="on" compiler="modern" encoding="UTF-8" target="1.8" source="1.8">
      <classpath refid="library.ref" />
  	  <exclude name="**/*Test*.java" />
    </javac>
    <copy todir="${build}/classes">
      <fileset dir="${src}/java" excludes="**/*.java*,**/*.jbx*" />
    </copy>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about                                             # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about">
    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about" srcfile="buildfiles/about.txt" />
    <echo message="${about}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about-custom                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about-custom">
    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
    <echo message="${about-custom}" />
    <java classname="org.apache.tools.ant.Main">
      <arg value="-projecthelp" />
    </java>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: all-targets                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="all-targets">
  	<echo message="Inizio target all-targets" />
    <antcall target="distribution" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: distribution                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="distribution" depends="package-ear">
  	<echo message="Inizio target distribution" />
    <echo message="====== L'artefatto si trova nel path: ${build}/archives/${target} ..."/>
	<copy tofile="${dist}/${target}/${ear-file-name}.ear" file="${build}/archives/${target}/${ear-file-name}.ear" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: resolve-dependencies                               # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="resolve-dependencies">
  	<echo message="Inizio target resolve-dependencies" />
	<ivy:configure/>
	<ivy:retrieve />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: internal target: load-dependencies                 # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="load-dependencies"  depends="resolve-dependencies">
  <echo message="Inizio target load-dependencies" />
  <echo message="Target eseguito solo in caso di utilizzo di IVY" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: Cleans the cache directory                         # -->
  <!-- #       as defined in the loaded settings                   # -->
  <!-- #                               (by default ~/.ivy2/cache)  # -->
  <!-- ############################################################# -->
  <!-- -->	
	
 <target name="ivy-cleancache">
	   <ivy:cleancache />
 </target>	
	
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-config                                # -->
  <!-- #         Gestire qui i  replace delle variabile d'ambiente # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="crea-properties" description="crea file di properties fdc_frontend_configurazione">
  	<echo message="Inizio target creaProperties" />
  	<echo message="===> Copio Constants da: ${deployContext}" />
  	

  	    <copy tofile="buildfiles/${fileProperties}" file="${conf}/business/${contesto}/ejb-location.properties" overwrite="true"/>


  	    <replace file="buildfiles/${fileProperties}" token="@JBOSS_VERSION@" value="${JBOSS_VERSION}"/>
		<echo message="jboss version: ${JBOSS_VERSION}"/>

  		<replace file="buildfiles/${fileProperties}" token="@DATA_SOURCE@" value="${DATA_SOURCE}"/>
		<echo message="data source: ${DATA_SOURCE}"/>

  		<replace file="buildfiles/${fileProperties}" token="@API_COM_GE_DEMOGRAFICO@" value="${API_COM_GE_DEMOGRAFICO}"/>
		<echo message="demografico: ${API_COM_GE_DEMOGRAFICO}"/>

		<replace file="buildfiles/${fileProperties}" token="@API_COM_GE_ASSICURAZIONE_VEICOLO@" value="${API_COM_GE_ASSICURAZIONE_VEICOLO}"/>
		<echo message="assicurazione veicolo: ${API_COM_GE_ASSICURAZIONE_VEICOLO}"/>

		<replace file="buildfiles/${fileProperties}" token="@API_COM_GE_TASSA_AUTO@" value="${API_COM_GE_TASSA_AUTO}"/>
		<echo message="tassa auto: ${API_COM_GE_TASSA_AUTO}"/>

	  	<replace file="buildfiles/${fileProperties}" token="@TOKEN@" value="${TOKEN}"/>
		<echo message="token: ${TOKEN}"/>

	    <replace file="buildfiles/${fileProperties}" token="@API_BIBLIOTECHE@" value="${API_BIBLIOTECHE}"/>
		<echo message="api biblioteche: ${API_BIBLIOTECHE}"/>

        <replace file="buildfiles/${fileProperties}" token="@API_ABBONAMENTI_AMT@" value="${API_ABBONAMENTI_AMT}"/>
		<echo message="api abbonamento amt: ${API_ABBONAMENTI_AMT}"/>

  </target>

	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: business-framework-jar                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="web-framework-jar">
  	<echo message="Inizio target web-framework-jar" />
  	<jar jarfile="${build}/archives/${target}/${webapp}-framework.jar">
      <fileset dir="${build}/classes">
      	<include name="it/liguriadigitale/framework/presentation/**/*.*"/>
      	<include name="it/liguriadigitale/${prodotto}/${componente}/presentation/*.*"/>
      	<include name="it/liguriadigitale/${prodotto}/${componente}/presentation/**/*.*"/>
      	<include name="resources/**/*.*"/>
      </fileset>
      <metainf dir="${build}/temp/conf/business/${contesto}/META-INF">
        <patternset id="all-xml">
          <include name="**/*.xml" />
        </patternset>
      </metainf>
    	<manifest>
	        <attribute name="Built-By" value="LIGURIADIGITALE" />
	        <attribute name="Built-Date" value="${DSTAMP}" />
	        <attribute name="Deploy" value="JBOSS" />
	        <attribute name="tier" value="LIBRARY" />
	      	<attribute name="Class-Path" value="${lib-ear-product} ${webapp}-integration.jar ${webapp}-commons.jar ${webapp}-business.jar" />
    	</manifest>
    </jar>
  </target>		
	
	
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-ear                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="package-ear"	depends="environment-recreate,compile-all, commons-jar,
                  					   	 business-ejb-jar, integration-jar,web-framework-jar">
  	<echo message="Inizio target package-ear" />
  		<copy todir="${build}/classes">
   		  <fileset dir="${conf}/web/${webapp}/WEB-INF" includes="struts*.xml"/>
  		</copy>
    <war destfile="${build}/archives/${target}/${war-file-name}.war"
		     webxml="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml"
  		     roundup="false">
		  <webinf dir="${conf}/web/${webapp}/WEB-INF"/>
  		  <fileset dir="${srcweb}" />
  		  <manifest>
  					<attribute name="Built-By" value="${user.name}" />
  					<attribute name="Built-Date" value="${DSTAMP}" />
  					<attribute name="target" value="${target}" />
  					<attribute name="Deploy" value="${appserver}" />
  					<attribute name="tier" value="WEBAPP" />
  			</manifest>
  		</war>
  		<copy todir="${temp}/${target}/${earLib}">
  	  	     <fileset dir="${lib}" excludes="${war-exclude-libs-filter-tm}" />
  			 <fileset dir="${build}/archives/${target}" includes="*.jar" excludes="${war-file-name}.war,*-business.jar"/>
  	  	</copy>
  		<copy todir="${temp}/conf/ear/${webapp}/META-INF">
  			<fileset dir="${conf}/ear/${webapp}/META-INF"  includes="*.xml"/>
  		</copy>
  	  	  	
  	    <ear appxml="${temp}/conf/ear/${webapp}/META-INF/application.xml" destfile="${build}/archives/${target}/${ear-file-name}.ear">
  	      <fileset dir="${temp}/${target}">
  	      	<include name="${earLib}/*.*" />
  	      </fileset>
  	      <fileset dir="${build}/archives/${target}" includes="${war-file-name}.war,*-business.jar"/>
  	      <metainf dir="${temp}/conf/ear/${webapp}/META-INF" includes="*.xml"/>
  	      <manifest>
  	        <attribute name="Built-By" value="${user.name}" />
  	        <attribute name="Built-Date" value="${DSTAMP}" />
  	        <attribute name="Target" value="${target}" />
  	        <attribute name="Appl-Version" value="${version}" />
  	      </manifest>
  	    </ear>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-war                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="package-war">
  	<echo message="Inizio target package-war" />
    <copy todir="${build}/classes">
      <fileset dir="${conf}/web/${webapp}/WEB-INF"
               includes="struts*.xml"/>
    </copy>
    <war destfile="${build}/archives/${target}/${war-file-name}.war"
         webxml="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml"
         roundup="false"
         manifest="${build}/temp/conf/web/${webapp}/META-INF/MANIFEST.MF">
      <webinf dir="${conf}/web/${deployContext}/${webapp}/WEB-INF" includes="applicationContext.xml,jboss-web.xml,beanContext.xml" />
      <fileset dir="${srcweb}" />
      <classes dir="${build}/jsp" includes="**" />
      <classes dir="${build}/classes" includes="it/liguriadigitale/${prodotto}/${componente}/presentation/**,*.xml,*.properties" />
      <lib dir="${lib}" includes="*" excludes="${war-exclude-libs-filter}" /> 
    </war>
  </target>

  
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: integration-jar                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="integration-jar">
  	<echo message="Inizio target integration-jar" />
    <jar jarfile="${build}/archives/${target}/${webapp}-integration.jar"
         manifest="${build}/temp/conf/jar/integration/META-INF/MANIFEST.MF">
      <fileset dir="${build}/classes">
        <include name="it/liguriadigitale/${prodotto}/${componente}/integration/**" />
      	<include name="it/liguriadigitale/framework/integration/**/*.*"/>
      </fileset>
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: business-ejb-jar                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="business-ejb-jar">
  	<echo message="Inizio target business-ejb-jar" />
  	<jar jarfile="${build}/archives/${target}/${webapp}-business.jar">
      <fileset dir="${build}/classes">
        <include name="it/liguriadigitale/${prodotto}/${componente}/business/*.*" />
      	<include name="it/liguriadigitale/${prodotto}/${componente}/business/**/*.*" />
      	<include name="it/liguriadigitale/framework/business/**/*.*"/>
      </fileset>
      <metainf dir="${build}/temp/conf/business/${contesto}/META-INF">
        <patternset id="all-xml">
          <include name="**/*.xml" />
        </patternset>
      </metainf>
    	<manifest>
	        <attribute name="Built-By" value="DATASIEL" />
	        <attribute name="Built-Date" value="${DSTAMP}" />
	        <attribute name="Deploy" value="JBOSS" />
	        <attribute name="tier" value="LIBRARY" />
	  </manifest>
    </jar>
  </target>
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: commons-jar                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="commons-jar">
  	<echo message="Inizio target commons-jar" />
    <jar destfile="${build}/archives/${target}/${webapp}-commons.jar"
         basedir="${build}/classes"
         includes="it/liguriadigitale/${prodotto}/${componente}/pojo/**,
                   it/liguriadigitale/${prodotto}/${componente}/exception/**,
    			   it/liguriadigitale/framework/pojo/**/*.*	,
                   it/liguriadigitale/${prodotto}/${componente}/util/**">
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: client-ejb-jar                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="create-client-ejb-jar" description="crea libreria per ejb esterni"  depends="environment-recreate,clean-archives,compile-all">
  	<echo message="Inizio target create-cliente-ejb-jar" />
  	<jar jarfile="${build}/archives/${target}/${componente}-${prodotto}-client-business.jar">	
      <fileset dir="${build}/classes">
      	<include name="it/liguriadigitale/${prodotto}/${componente}/pojo/common/**/*.*" />
      	<include name="it/liguriadigitale/${prodotto}/${componente}/pojo/enums/**/*.*" />
      	<include name="it/liguriadigitale/${prodotto}/${componente}/pojo/privacy/dto/**/*.*" />
      	<include name="it/liguriadigitale/${prodotto}/${componente}/pojo/family/dto/**/*.*" />      	
      	<include name="it/liguriadigitale/${prodotto}/${componente}/presentation/rest/privacy/service/**"/>
        <include name="it/liguriadigitale/${prodotto}/${componente}/presentation/rest/family/service/**"/>
      </fileset>
      <metainf dir="${build}/temp/conf/business/${contesto}/META-INF">
        <patternset id="all-xml">
          <include name="**/*.xml" />
        </patternset>
      </metainf>
    	<manifest>
	        <attribute name="Built-By" value="LIGURIADIGITALE" />
	        <attribute name="Built-Date" value="${DSTAMP}" />
	        <attribute name="Deploy" value="JBOSS" />
	        <attribute name="tier" value="LIBRARY" />
	  </manifest>
    </jar>
  </target>		
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-all                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  
  <target name="clean-all" depends="clean-archives,clean-cache,clean-classes,clean-javadoc,clean-lib,clean-temp"/>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-cache                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-cache">
  </target>

	<!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-temp                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-temp">
    <delete dir="${temp}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-ws                                       # -->
  <!-- ############################################################# -->
  <!-- -->	
  <target name="clean-ws">
    <delete dir="${build}/classesws" />
  </target>	
	

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-archives                                  # -->
  <!-- ############################################################# -->
  <!-- -->
	  <target name="clean-archives">
	  		<mkdir dir="${build}/archives"/>
		  	<delete includeemptydirs="true">
		  	    <fileset dir="${build}/archives" defaultexcludes="false">
		  	       <include name="**/**" />
		  	    </fileset>
		  	</delete>
	  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-dist                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-dist">
    <delete dir="${dist}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-classes                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-classes">
	<mkdir dir="${build}/classes"/>
  	<delete includeemptydirs="true">
  	    <fileset dir="${build}/classes" defaultexcludes="false">
  	       <include name="**/**" />
  	    </fileset>
  	</delete>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-javadoc                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-javadoc">
    <delete dir="${build}/javadoc" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-lib                                        # -->
  <!-- ############################################################# -->
  <!-- -->
	<target name="clean-lib" description="--> clean the project libraries directory (dependencies)">
	   <delete includeemptydirs="true" dir="${lib}"/>
	   <mkdir dir="${lib}"/>
	</target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: _clean-web-inf                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="_clean-web-inf">
    <delete dir="${srcweb}/WEB-INF/classes" />
    <delete dir="${srcweb}/WEB-INF/lib" />
  </target>
 	 
 
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DEPLOY]: deploy artifact to server by FTP                # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="deploy"  description = "Deploy su server definito sul target" depends="package-ear">
  	<scp file="build/archives/${target}/${ear-file-name}.ear" 
	 			  todir="${user}:${password}@${servername}:${remotedir}" port="22" trust="true"/>
  	<echo message="Copiato nel path: ${remotedir}"></echo>
  	<antcall target="timestamp">
  		<param name="message" value="Fine:" />
  	</antcall>
  </target>
	
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DEPLOY]: deploy artifact to local DIRECTORY              # -->
  <!-- ############################################################# -->
  <!-- -->
	
  <target name="deployLocale"  description = "Deploy su server definito sul target" depends="package-ear">
  		<copy todir="${path}">
  	  		  <fileset dir="build/archives/${target}" includes="*.ear"/>
  	  	</copy>
  	<echo message="Copiato nel path: ${path}"></echo>
  	<antcall target="timestamp">
  		<param name="message" value="Fine:" />
  	</antcall>
  </target>	
	
	
  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DEPLOY]: deploy file properties to local DIRECTORY              # -->
  <!-- ############################################################# -->
  <!-- -->
	
  <target name="deployProperties"  description = "copia file di properties" depends="crea-properties">
  	
  	<copy tofile="${path}/../configuration/${fileProperties}" file="buildfiles/${fileProperties}" overwrite="true"/>
  	<echo message="Copiato file properties ${fileProperties} nel path: ${path}/../configuration/"></echo>
  	<antcall target="timestamp">
  		<param name="message" value="Fine:" />
  	</antcall>
  </target>	
</project>
